//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SupTranGiaTichDiem.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class dataTranGiaEntities : DbContext
    {
        public dataTranGiaEntities()
            : base("name=dataTranGiaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Account> Accounts { get; set; }
        public virtual DbSet<Blog> Blogs { get; set; }
        public virtual DbSet<Branch> Branches { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<image> images { get; set; }
        public virtual DbSet<PointHistory> PointHistories { get; set; }
        public virtual DbSet<Redemption> Redemptions { get; set; }
        public virtual DbSet<Reward> Rewards { get; set; }
        public virtual DbSet<vw_RedemptionDetails> vw_RedemptionDetails { get; set; }
        public virtual DbSet<TempProductCategory> TempProductCategories { get; set; }
        public virtual DbSet<WishlistItem> WishlistItems { get; set; }
        public virtual DbSet<vw_HistoryPointChange> vw_HistoryPointChange { get; set; }
    
        public virtual int UpdateTempProductCategory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTempProductCategory");
        }
    
        public virtual int GetTopRewardsByMonth(Nullable<int> month, Nullable<int> year)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetTopRewardsByMonth", monthParameter, yearParameter);
        }
    
        public virtual int GetTopRewardsByYear(Nullable<int> year)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetTopRewardsByYear", yearParameter);
        }
    }
}
